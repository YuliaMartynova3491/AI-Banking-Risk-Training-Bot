"""
Промпты для AI-агента
"""

# Основные промпты для разных задач агента

AGENT_PROMPTS = {
    "system_prompt": """
Ты - персональный AI-помощник для обучения банковских сотрудников рискам нарушения непрерывности деятельности.

Твоя роль:
- Анализировать прогресс каждого пользователя
- Адаптировать сложность материала под уровень знаний
- Генерировать персонализированные вопросы и объяснения
- Предоставлять поддержку и мотивацию
- Помогать в изучении сложных концепций

Принципы работы:
1. Всегда учитывай индивидуальные особенности пользователя
2. Адаптируй язык и сложность под уровень понимания
3. Будь поддерживающим и мотивирующим
4. Используй конкретные примеры из банковской практики
5. Фокусируйся на практическом применении знаний

Ответы должны быть:
- На русском языке
- Четкими и понятными
- Структурированными
- Адаптированными под контекст банковской деятельности
""",

    "question_generation": """
Сгенерируй {count} вопросов по теме "{topic}", урок {lesson_id}.

Контекст для генерации:
{context}

Требования:
- Уровень сложности: {difficulty}
- Каждый вопрос должен иметь 4 варианта ответа
- Только один правильный ответ
- Включи объяснение для правильного ответа
- Вопросы должны проверять понимание, а не запоминание
- Используй примеры из банковской практики

Пользователь показывает следующие результаты:
- Средняя оценка: {average_score}%
- Слабые места: {weak_areas}
- Сильные стороны: {strong_areas}

Формат ответа - JSON массив:
[
  {{
    "question": "текст вопроса",
    "options": ["вариант 1", "вариант 2", "вариант 3", "вариант 4"],
    "correct_answer": 0,
    "explanation": "объяснение правильного ответа"
  }}
]
""",

    "personalized_help": """
Пользователь задал вопрос: "{question}"

Контекст пользователя:
- Уровень опыта: {experience_level}
- Средняя оценка: {average_score}%
- Тема: {topic}
- Урок: {lesson_id}
- Предпочтительный стиль обучения: {learning_style}

Релевантная информация из базы знаний:
{relevant_content}

Дай персонализированный ответ, который:
1. Отвечает на конкретный вопрос пользователя
2. Учитывает его уровень понимания
3. Включает практические примеры
4. Мотивирует к дальнейшему изучению
5. Предлагает дополнительные ресурсы если нужно

Ответ должен быть структурированным и легким для понимания.
""",

    "difficulty_adaptation": """
Проанализируй необходимость адаптации сложности для пользователя.

Данные пользователя:
- Последние 5 результатов: {recent_scores}
- Текущий уровень сложности: {current_difficulty}
- Время на прохождение заданий: {completion_times}
- Количество попыток: {attempts_count}
- Обращения за помощью: {help_requests}

Критерии для изменения сложности:
- Повышение: стабильно >90%, быстрое выполнение, мало обращений за помощью
- Понижение: стабильно <60%, долгое выполнение, частые обращения за помощью
- Сохранение: результаты в диапазоне 60-90%

Дай рекомендацию в формате JSON:
{{
  "needs_change": true/false,
  "new_difficulty": "beginner/intermediate/advanced",
  "reason": "объяснение причины",
  "confidence": 0.0-1.0,
  "message": "сообщение пользователю"
}}
""",

    "progress_analysis": """
Проанализируй прогресс пользователя и дай персонализированную обратную связь.

Данные прогресса:
{progress_data}

Статистика по темам:
{topic_statistics}

Паттерны обучения:
{learning_patterns}

Создай анализ, который включает:
1. Общую оценку прогресса
2. Выявленные сильные стороны
3. Области для улучшения
4. Конкретные рекомендации
5. Мотивационное сообщение

Ответ должен быть:
- Персонализированным
- Конструктивным
- Мотивирующим
- Содержащим конкретные действия
""",

    "encouragement_generation": """
Сгенерируй персонализированное поощрительное сообщение.

Контекст:
- Результат: {score}%
- Тип ситуации: {situation_type}
- Уровень мотивации пользователя: {motivation_level}
- Опыт обучения: {experience_level}
- Предыдущие результаты: {previous_results}

Типы ситуаций:
- excellent_performance: >90%
- good_improvement: улучшение результатов
- moderate_performance: 60-80%
- struggling: <60% несколько раз подряд
- first_success: первый успешный результат

Создай сообщение, которое:
1. Соответствует ситуации
2. Учитывает личность пользователя
3. Мотивирует к продолжению
4. Содержит конкретную похвалу или поддержку
5. Подходит по тону для банковской среды

Используй подходящие эмодзи для эмоциональности.
""",

    "explanation_request": """
Объясни концепцию "{concept}" пользователю.

Профиль пользователя:
- Уровень знаний: {knowledge_level}
- Предпочтительный стиль: {explanation_style}
- Контекст обучения: {learning_context}

Информация из базы знаний:
{knowledge_base_info}

Создай объяснение, которое:
1. Начинается с простого определения
2. Включает практические примеры из банковской сферы
3. Объясняет важность концепции
4. Связывает с ранее изученным материалом
5. Предлагает способы запоминания

Стили объяснения:
- detailed: подробное с примерами
- concise: краткое и по сути
- visual: с описанием схем и процессов
- practical: с фокусом на применении
""",

    "recommendation_prompt": """
На основе анализа пользователя сформируй персонализированные рекомендации.

Анализ пользователя:
{user_analysis}

Текущий прогресс:
{current_progress}

Цели обучения:
{learning_goals}

Создай рекомендации в следующих категориях:
1. Немедленные действия (что делать прямо сейчас)
2. Краткосрочные цели (на ближайшую неделю)
3. Долгосрочное развитие (на месяц)
4. Дополнительные ресурсы

Каждая рекомендация должна быть:
- Конкретной и выполнимой
- Адаптированной под уровень пользователя
- Мотивирующей
- Связанной с банковской практикой

Формат ответа:
{{
  "immediate_actions": ["действие 1", "действие 2"],
  "short_term_goals": ["цель 1", "цель 2"], 
  "long_term_development": ["направление 1", "направление 2"],
  "additional_resources": ["ресурс 1", "ресурс 2"],
  "motivation_message": "персональное мотивационное сообщение"
}}
""",

    "quiz_feedback": """
Проанализируй результаты тестирования и дай обратную связь.

Результаты теста:
- Общий балл: {total_score}%
- Правильных ответов: {correct_answers}/{total_questions}
- Время выполнения: {completion_time} минут
- Детали по вопросам: {question_details}

Анализ ошибок:
{error_analysis}

Профиль пользователя:
{user_profile}

Создай обратную связь, которая включает:
1. Оценку результата (с эмодзи)
2. Анализ сильных сторон
3. Выявление областей для улучшения
4. Конкретные рекомендации для каждой ошибки
5. План действий для улучшения
6. Мотивационное заключение

Тон должен быть:
- Поддерживающим, но честным
- Конструктивным
- Ориентированным на рост
- Профессиональным
""",

    "hint_generation": """
Пользователь просит подсказку для вопроса во время тестирования.

Вопрос: "{question}"
Варианты ответов: {options}
Правильный ответ: {correct_answer}

Профиль пользователя:
- Уровень поддержки: {support_level}
- Опыт: {experience_level}

Создай подсказку, которая:
1. НЕ дает прямой ответ
2. Направляет мышление в правильную сторону
3. Помогает вспомнить ключевые концепции
4. Подходит по уровню сложности
5. Мотивирует к самостоятельному поиску ответа

Типы подсказок:
- Вопрос-наводка
- Напоминание о ключевой концепции
- Исключение неверных вариантов
- Ссылка на изученный материал

Длина подсказки: не более 100 символов для отображения в уведомлении.
""",

    "adaptive_content": """
Адаптируй учебный контент под пользователя.

Исходный контент:
{original_content}

Профиль пользователя:
- Уровень знаний: {knowledge_level}
- Стиль обучения: {learning_style}
- Скорость освоения: {learning_speed}
- Предпочтения: {preferences}

Цель адаптации: {adaptation_goal}

Адаптируй контент следующим образом:
1. Измени сложность языка
2. Добавь/убери детали в зависимости от уровня
3. Включи релевантные примеры
4. Структурируй под стиль обучения
5. Добавь мотивационные элементы

Стили обучения:
- visual: больше схем, структурированность
- auditory: ритмичность, повторения
- kinesthetic: практические примеры, действия
- reading: подробные объяснения, логика
""",

    "error_explanation": """
Объясни ошибку пользователя в ответе на вопрос.

Вопрос: "{question}"
Ответ пользователя: "{user_answer}"
Правильный ответ: "{correct_answer}"
Объяснение из базы: "{base_explanation}"

Профиль пользователя:
{user_profile}

Создай персонализированное объяснение ошибки:
1. Начни с понимающего тона
2. Объясни, почему ответ пользователя неверен
3. Покажи правильный ход мышления
4. Дай дополнительный контекст
5. Предложи способ запомнить правильный ответ
6. Поощри к продолжению обучения

Избегай:
- Критики личности
- Сложных терминов без объяснения
- Длинных объяснений
- Негативного тона
""",

    "learning_path_suggestion": """
Предложи персональный путь обучения для пользователя.

Текущее состояние:
{current_state}

Анализ пробелов в знаниях:
{knowledge_gaps}

Цели пользователя:
{user_goals}

Доступное время:
{available_time}

Создай план обучения:
1. Приоритетные темы для изучения
2. Рекомендуемую последовательность
3. Временные рамки
4. Контрольные точки
5. Дополнительные активности

Учти:
- Индивидуальный темп обучения
- Сложность материала
- Мотивационные факторы
- Практическую применимость
- Возможности для повторения

Формат: структурированный план с четкими шагами и временными рамками.
"""
}

# Специализированные промпты для конкретных тем

TOPIC_SPECIFIC_PROMPTS = {
    "основы_рисков": {
        "introduction": """
Представь тему "Основы рисков нарушения непрерывности деятельности" для пользователя уровня {level}.

Включи:
1. Простое определение риска непрерывности
2. Почему это важно для банка
3. Основных участников процесса
4. Примеры из реальной практики
5. Что пользователь изучит в этой теме

Адаптируй сложность под уровень {level}.
""",
        
        "key_concepts": """
Объясни ключевые концепции темы "Основы рисков":
- Операционная устойчивость
- Критически важные процессы  
- УОР и его роль
- Источники информации для оценки

Для пользователя уровня {level} с опытом {experience}.
Используй банковские примеры и избегай сложного жаргона.
"""
    },
    
    "критичность_процессов": {
        "introduction": """
Представь тему "Оценка критичности процессов" как логическое продолжение основ рисков.

Объясни:
1. Что такое критически важные процессы
2. Как их определяют
3. RTO и MTPD простыми словами
4. Важность окружения процессов

Уровень пользователя: {level}
Предыдущие результаты: {previous_scores}
""",
        
        "practical_examples": """
Приведи конкретные примеры критически важных процессов в банке:
1. Обработка платежей
2. Обслуживание клиентов
3. Управление рисками
4. Отчетность

Для каждого объясни почему он критичен и что может произойти при его нарушении.
Адаптируй под опыт пользователя: {experience_level}
"""
    },
    
    "оценка_рисков": {
        "methodology_intro": """
Представь методы оценки рисков нарушения непрерывности.

Структура объяснения:
1. Качественная vs количественная оценка
2. Сценарии угроз
3. Типы угроз (техногенные, природные и др.)
4. Процесс оценки

Пользователь показал {performance_level} результаты в предыдущих темах.
Адаптируй сложность соответственно.
""",
        
        "threat_scenarios": """
Объясни различные типы угроз и сценарии их реализации:

Типы угроз:
- Техногенные (включая киберугрозы)
- Природные
- Социальные 
- Геополитические
- Экономические
- Биолого-социальные

Для каждого типа приведи:
1. Определение
2. Примеры из банковской практики  
3. Методы оценки воздействия
4. Способы митигации

Уровень детализации: {detail_level}
"""
    }
}

# Промпты для разных стилей обучения

LEARNING_STYLE_PROMPTS = {
    "visual": """
Структурируй ответ для визуального восприятия:
- Используй заголовки и подзаголовки
- Создавай списки и перечисления
- Описывай схемы и процессы пошагово
- Используй символы и эмодзи для структуры
- Выделяй ключевые моменты

Контент: {content}
""",
    
    "auditory": """
Адаптируй для аудиального восприятия:
- Используй ритмичные конструкции
- Добавь повторения ключевых моментов
- Создавай мнемонические фразы
- Используй аналогии и сравнения
- Структурируй как рассказ

Контент: {content}
""",
    
    "kinesthetic": """
Адаптируй для практического обучения:
- Фокусируйся на применении
- Приводи конкретные примеры действий
- Описывай пошаговые процедуры
- Связывай с реальным опытом
- Предлагай практические упражнения

Контент: {content}
""",
    
    "reading": """
Структурируй для вдумчивого чтения:
- Предоставь логичную последовательность
- Включи детальные объяснения
- Добавь связи между концепциями
- Используй точные определения
- Структурируй от общего к частному

Контент: {content}
"""
}

# Вспомогательные функции для работы с промптами

def get_prompt(category: str, prompt_type: str, **kwargs) -> str:
    """Получить промпт с подстановкой параметров"""
    if category == "main":
        template = AGENT_PROMPTS.get(prompt_type, "")
    elif category == "topic":
        topic = kwargs.get("topic", "")
        template = TOPIC_SPECIFIC_PROMPTS.get(topic, {}).get(prompt_type, "")
    elif category == "style":
        template = LEARNING_STYLE_PROMPTS.get(prompt_type, "")
    else:
        template = ""
    
    if template:
        try:
            return template.format(**kwargs)
        except KeyError as e:
            return f"Ошибка в промпте: отсутствует параметр {e}"
    else:
        return f"Промпт не найден: {category}.{prompt_type}"


def build_personalized_prompt(base_prompt: str, user_profile: dict, context: dict) -> str:
    """Построить персонализированный промпт"""
    personalization = {
        "experience_level": user_profile.get("experience_level", "beginner"),
        "learning_style": user_profile.get("learning_style", "balanced"),
        "motivation_level": user_profile.get("motivation_level", "medium"),
        "support_needs": user_profile.get("support_needs", "medium"),
        **context
    }
    
    try:
        return base_prompt.format(**personalization)
    except KeyError as e:
        return f"Ошибка персонализации промпта: отсутствует параметр {e}"